(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{530:function(t,e,a){"use strict";a.r(e);var s=a(56),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"install"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[t._v("#")]),t._v(" Install")]),t._v(" "),a("h2",{attrs:{id:"requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[t._v("#")]),t._v(" Requirements")]),t._v(" "),a("p",[t._v("Thor requires "),a("code",[t._v("Go")]),t._v(" 1.12+ and "),a("code",[t._v("C")]),t._v(" compiler to build. To install "),a("code",[t._v("Go")]),t._v(", follow this "),a("a",{attrs:{href:"https://golang.org/doc/install",target:"_blank",rel:"noopener noreferrer"}},[t._v("link"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"getting-the-source"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getting-the-source"}},[t._v("#")]),t._v(" Getting the source")]),t._v(" "),a("p",[t._v("Clone the Thor "),a("a",{attrs:{href:"https://github.com/vechain/thor",target:"_blank",rel:"noopener noreferrer"}},[t._v("repo"),a("OutboundLink")],1),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/vechain/thor.git\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" thor\n")])])]),a("h3",{attrs:{id:"dependency-management"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dependency-management"}},[t._v("#")]),t._v(" Dependency management")]),t._v(" "),a("p",[t._v("Simply run:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" dep\n")])])]),a("p",[t._v("If you keep getting network error, it is suggested to use "),a("a",{attrs:{href:"https://golang.org/cmd/go/#hdr-Module_proxy_protocol",target:"_blank",rel:"noopener noreferrer"}},[t._v("Go Module Proxy"),a("OutboundLink")],1),t._v(". "),a("a",{attrs:{href:"https://proxy.golang.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://proxy.golang.org/"),a("OutboundLink")],1),t._v(" is one option.")]),t._v(" "),a("h3",{attrs:{id:"building"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#building"}},[t._v("#")]),t._v(" Building")]),t._v(" "),a("p",[t._v("To build the main app "),a("code",[t._v("thor")]),t._v(", just run")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v("\n")])])]),a("p",[t._v("or build the full suite:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" all\n")])])]),a("p",[t._v("If no error reported, all built executable binaries will appear in folder "),a("em",[t._v("bin")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"running-thor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#running-thor"}},[t._v("#")]),t._v(" Running Thor")]),t._v(" "),a("p",[t._v("Connect to VeChain's mainnet:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("bin/thor --network main\n")])])]),a("p",[t._v("Connect to VeChain's testnet:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("bin/thor --network "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n")])])]),a("p",[t._v("or startup a custom network")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("bin/thor --network "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("custom-net-genesis.json"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("example genesis config file can be found at "),a("a",{attrs:{href:"https://raw.githubusercontent.com/vechain/thor/master/genesis/example.json",target:"_blank",rel:"noopener noreferrer"}},[t._v("genesis/example.json"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("To find out usages of all command line options:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("bin/thor -h\n")])])]),a("ul",[a("li",[a("code",[t._v("--network value")]),t._v("             the network to join (main|test) or path to genesis file")]),t._v(" "),a("li",[a("code",[t._v("--data-dir value")]),t._v("            directory for block-chain databases")]),t._v(" "),a("li",[a("code",[t._v("--cache value")]),t._v("               megabytes of ram allocated to internal caching (default: 2048)")]),t._v(" "),a("li",[a("code",[t._v("--beneficiary value")]),t._v("         address for block rewards")]),t._v(" "),a("li",[a("code",[t._v("--target-gas-limit value")]),t._v("    target block gas limit (adaptive if set to 0) (default: 0)")]),t._v(" "),a("li",[a("code",[t._v("--api-addr value")]),t._v('            API service listening address (default: "localhost:8669")')]),t._v(" "),a("li",[a("code",[t._v("--api-cors value")]),t._v("            comma separated list of domains from which to accept cross origin requests to API")]),t._v(" "),a("li",[a("code",[t._v("--api-timeout value")]),t._v("         API request timeout value in milliseconds (default: 10000)")]),t._v(" "),a("li",[a("code",[t._v("--api-call-gas-limit value")]),t._v("  limit contract call gas (default: 50000000)")]),t._v(" "),a("li",[a("code",[t._v("--api-backtrace-limit value")]),t._v(" limit the distance between "),a("code",[t._v("position")]),t._v(" and best block for subscriptions APIs (default: 1000)")]),t._v(" "),a("li",[a("code",[t._v("--verbosity value")]),t._v("           log verbosity (0-9) (default: 3)")]),t._v(" "),a("li",[a("code",[t._v("--max-peers value")]),t._v("           maximum number of P2P network peers (P2P network disabled if set to 0) (default: 25)")]),t._v(" "),a("li",[a("code",[t._v("--p2p-port value")]),t._v("            P2P network listening port (default: 11235)")]),t._v(" "),a("li",[a("code",[t._v("--nat value")]),t._v('                 port mapping mechanism (any|none|upnp|pmp|extip:<IP>) (default: "none")')]),t._v(" "),a("li",[a("code",[t._v("--bootnode value")]),t._v("            comma separated list of bootnode IDs")]),t._v(" "),a("li",[a("code",[t._v("--skip-logs")]),t._v("                 skip writing event|transfer logs (/logs API will be disabled)")]),t._v(" "),a("li",[a("code",[t._v("--pprof")]),t._v("                     turn on go-pprof")]),t._v(" "),a("li",[a("code",[t._v("--disable-pruner")]),t._v("            disable state pruner to keep all history")]),t._v(" "),a("li",[a("code",[t._v("--help, -h")]),t._v("                  show help")]),t._v(" "),a("li",[a("code",[t._v("--version, -v")]),t._v("               print the version")])]),t._v(" "),a("h3",{attrs:{id:"sub-commands"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sub-commands"}},[t._v("#")]),t._v(" Sub-commands")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("solo")]),t._v("                client runs in solo mode for test & dev")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("bin/thor solo --on-demand               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create new block when there is pending transaction")]),t._v("\nbin/thor solo --persist                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# save blockchain data to disk(default to memory)")]),t._v("\nbin/thor solo --persist --on-demand     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# two options can work together")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("master-key")]),t._v("          master key management")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# print the master address")]),t._v("\nbin/thor master-key\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# export master key to keystore")]),t._v("\nbin/thor master-key --export "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" keystore.json\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# import master key from keystore")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" keystore.json "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" bin/thor master-key --import\n")])])]),a("h2",{attrs:{id:"docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[t._v("#")]),t._v(" Docker")]),t._v(" "),a("p",[a("strong",[t._v("This method needs running all commands by docker with the data directory mapped to the container.")])]),t._v(" "),a("h3",{attrs:{id:"pull-image"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pull-image"}},[t._v("#")]),t._v(" Pull image")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("docker pull vechain/thor\n")])])]),a("h3",{attrs:{id:"export-master-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#export-master-key"}},[t._v("#")]),t._v(" Export Master Key")]),t._v(" "),a("p",[t._v("First, start an interactive shell by docker:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("docker run -it --rm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-v "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("path-to-your-data-directory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(":/root/.org.vechain.thor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--entrypoint /bin/sh vechain/thor\n")])])]),a("p",[t._v("Then export master key in the shell:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("thor master-key --export "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /root/.org.vechain.thor/keystore.json\n")])])]),a("p",[t._v("Enter your password and check the generated file, then exit.")]),t._v(" "),a("h3",{attrs:{id:"import-master-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#import-master-key"}},[t._v("#")]),t._v(" Import Master Key")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("docker run -it --rm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-v "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("path-to-your-data-directory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(":/root/.org.vechain.thor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\nvechain/thor master-key --import\n")])])]),a("p",[t._v("Follow the instruction by the program, input the "),a("code",[t._v("KeyStore")]),t._v(" and also the password.")]),t._v(" "),a("h3",{attrs:{id:"check-master-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#check-master-key"}},[t._v("#")]),t._v(" Check Master Key")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("docker run -it --rm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-v "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("path-to-your-data-directory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(":/root/.org.vechain.thor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\nvechain/thor master-key\n")])])]),a("p",[t._v("This command will print the Master Key.")]),t._v(" "),a("h3",{attrs:{id:"start-the-authority-masternode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#start-the-authority-masternode"}},[t._v("#")]),t._v(" Start the Authority Masternode")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("docker run -d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-v "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("path-to-your-data-directory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(":/root/.org.vechain.thor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:8669:8669 -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11235")]),t._v(":11235 -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11235")]),t._v(":11235/udp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--name thor-node vechain/thor --network main --skip-logs\n")])])]),a("h2",{attrs:{id:"public-nodes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#public-nodes"}},[t._v("#")]),t._v(" Public Nodes")]),t._v(" "),a("p",[t._v("Please visit "),a("RouterLink",{attrs:{to:"/others/demos-and-services.html#public-nodes"}},[t._v("Public Nodes")]),t._v(" for more information.")],1)])}),[],!1,null,null,null);e.default=r.exports}}]);